{:classpath {"/Users/anthonycaumond/.m2/repository/com/taoensso/encore/3.62.1/encore-3.62.1.jar" {:lib-name com.taoensso/encore}, "/Users/anthonycaumond/.m2/repository/mount/mount/0.1.17/mount-0.1.17.jar" {:lib-name mount/mount}, "/Users/anthonycaumond/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar" {:lib-name org.clojure/tools.reader}, "/Users/anthonycaumond/.m2/repository/org/clojure/core.memoize/1.0.253/core.memoize-1.0.253.jar" {:lib-name org.clojure/core.memoize}, "/Users/anthonycaumond/.m2/repository/org/clojure/tools.cli/1.0.219/tools.cli-1.0.219.jar" {:lib-name org.clojure/tools.cli}, "/Users/anthonycaumond/.m2/repository/io/sentry/sentry/6.32.0/sentry-6.32.0.jar" {:lib-name io.sentry/sentry}, "/Users/anthonycaumond/.m2/repository/nrepl/nrepl/1.0.0/nrepl-1.0.0.jar" {:lib-name nrepl/nrepl}, "test/clj" {:path-key :extra-paths}, "/Users/anthonycaumond/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar" {:lib-name commons-io/commons-io}, "/Users/anthonycaumond/.m2/repository/ring/ring-core/1.10.0/ring-core-1.10.0.jar" {:lib-name ring/ring-core}, "/Users/anthonycaumond/.m2/repository/com/taoensso/truss/1.10.1/truss-1.10.1.jar" {:lib-name com.taoensso/truss}, "/Users/anthonycaumond/.m2/repository/fipp/fipp/0.6.26/fipp-0.6.26.jar" {:lib-name fipp/fipp}, "/Users/anthonycaumond/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar" {:lib-name org.clojure/core.cache}, "/Users/anthonycaumond/.m2/repository/babashka/fs/0.4.19/fs-0.4.19.jar" {:lib-name babashka/fs}, "/Users/anthonycaumond/.m2/repository/org/clojure/core.rrb-vector/0.1.2/core.rrb-vector-0.1.2.jar" {:lib-name org.clojure/core.rrb-vector}, "/Users/anthonycaumond/.m2/repository/com/taoensso/tempura/1.5.3/tempura-1.5.3.jar" {:lib-name com.taoensso/tempura}, "/Users/anthonycaumond/.m2/repository/refactor-nrepl/refactor-nrepl/3.9.0/refactor-nrepl-3.9.0.jar" {:lib-name refactor-nrepl/refactor-nrepl}, "/Users/anthonycaumond/.m2/repository/babashka/process/0.5.21/process-0.5.21.jar" {:lib-name babashka/process}, "/Users/anthonycaumond/.m2/repository/primitive-math/primitive-math/0.1.6/primitive-math-0.1.6.jar" {:lib-name primitive-math/primitive-math}, "/Users/anthonycaumond/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar" {:lib-name commons-codec/commons-codec}, "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/cljs" {:lib-name hephaistox/automaton-core}, "/Users/anthonycaumond/.m2/repository/borkdude/dynaload/0.3.5/dynaload-0.3.5.jar" {:lib-name borkdude/dynaload}, "/Users/anthonycaumond/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar" {:lib-name org.clojure/tools.namespace}, "/Users/anthonycaumond/.m2/repository/com/clojure-goes-fast/clj-memory-meter/0.3.0/clj-memory-meter-0.3.0.jar" {:lib-name com.clojure-goes-fast/clj-memory-meter}, "env/development/src/clj" {:path-key :extra-paths}, "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/resources" {:lib-name hephaistox/automaton-core}, "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/cljc" {:lib-name hephaistox/automaton-core}, "/Users/anthonycaumond/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar" {:lib-name commons-fileupload/commons-fileupload}, "test/resources" {:path-key :extra-paths}, "/Users/anthonycaumond/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar" {:lib-name org.clojure/clojure}, "/Users/anthonycaumond/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar" {:lib-name org.clojure/tools.analyzer.jvm}, "/Users/anthonycaumond/.m2/repository/cider/cider-nrepl/0.30.0/cider-nrepl-0.30.0.jar" {:lib-name cider/cider-nrepl}, "/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-slf4j2-impl/2.20.0/log4j-slf4j2-impl-2.20.0.jar" {:lib-name org.apache.logging.log4j/log4j-slf4j2-impl}, "/Users/anthonycaumond/.m2/repository/org/slf4j/slf4j-api/2.0.6/slf4j-api-2.0.6.jar" {:lib-name org.slf4j/slf4j-api}, "/Users/anthonycaumond/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar" {:lib-name org.clojure/tools.analyzer}, "/Users/anthonycaumond/.m2/repository/org/clojure/core.specs.alpha/0.2.62/core.specs.alpha-0.2.62.jar" {:lib-name org.clojure/core.specs.alpha}, "/Users/anthonycaumond/.m2/repository/crypto-equality/crypto-equality/1.0.1/crypto-equality-1.0.1.jar" {:lib-name crypto-equality/crypto-equality}, "/Users/anthonycaumond/.gitlibs/libs/com.cognitect/test-runner/7284cda41fb9edc0f3bc6b6185cfb7138fc8a023/src" {:lib-name com.cognitect/test-runner}, "/Users/anthonycaumond/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar" {:lib-name org.clojure/java.classpath}, "/Users/anthonycaumond/.m2/repository/org/ow2/asm/asm/9.2/asm-9.2.jar" {:lib-name org.ow2.asm/asm}, "/Users/anthonycaumond/.m2/repository/io/sentry/sentry-clj/6.28.200/sentry-clj-6.28.200.jar" {:lib-name io.sentry/sentry-clj}, "src/cljs" {:path-key :paths}, "/Users/anthonycaumond/.m2/repository/org/clojure/tools.logging/1.2.4/tools.logging-1.2.4.jar" {:lib-name org.clojure/tools.logging}, "/Users/anthonycaumond/.m2/repository/org/clojure/data.priority-map/1.1.0/data.priority-map-1.1.0.jar" {:lib-name org.clojure/data.priority-map}, "/Users/anthonycaumond/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar" {:lib-name org.clojure/spec.alpha}, "/Users/anthonycaumond/.m2/repository/danlentz/clj-uuid/0.1.9/clj-uuid-0.1.9.jar" {:lib-name danlentz/clj-uuid}, "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/clj" {:lib-name hephaistox/automaton-core}, "env/development/resources" {:path-key :extra-paths}, "/Users/anthonycaumond/.m2/repository/mvxcvi/arrangement/2.1.0/arrangement-2.1.0.jar" {:lib-name mvxcvi/arrangement}, "/Users/anthonycaumond/.m2/repository/org/clojure/core.async/1.6.681/core.async-1.6.681.jar" {:lib-name org.clojure/core.async}, "test/cljc" {:path-key :extra-paths}, "/Users/anthonycaumond/.m2/repository/borkdude/edamame/1.3.23/edamame-1.3.23.jar" {:lib-name borkdude/edamame}, "src/cljc" {:path-key :paths}, "/Users/anthonycaumond/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar" {:lib-name org.clojure/test.check}, "/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-core/2.20.0/log4j-core-2.20.0.jar" {:lib-name org.apache.logging.log4j/log4j-core}, "/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar" {:lib-name org.apache.logging.log4j/log4j-api}, "/Users/anthonycaumond/.m2/repository/crypto-random/crypto-random/1.2.1/crypto-random-1.2.1.jar" {:lib-name crypto-random/crypto-random}, "/Users/anthonycaumond/.m2/repository/lambdaisland/uri/1.16.134/uri-1.16.134.jar" {:lib-name lambdaisland/uri}, "env/development/src/cljc" {:path-key :extra-paths}, "src/clj" {:path-key :paths}, "/Users/anthonycaumond/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar" {:lib-name ring/ring-codec}, "resources" {:path-key :paths}, "/Users/anthonycaumond/.m2/repository/metosin/malli/0.13.0/malli-0.13.0.jar" {:lib-name metosin/malli}}, :basis-config {:aliases [:common-test :env-development-repl]}, :mvn/repos {"central" {:url "https://repo1.maven.org/maven2/"}, "clojars" {:url "https://repo.clojars.org/"}}, :argmap {:exec-fn cognitect.test-runner.api/test, :extra-deps {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner", :sha "7284cda41fb9edc0f3bc6b6185cfb7138fc8a023"}, org.clojure/tools.namespace {:mvn/version "1.4.4"}, org.clojure/tools.reader {:mvn/version "1.3.6"}, cider/cider-nrepl {:mvn/version "0.30.0"}, org.clojure/core.async {:mvn/version "1.6.681"}}, :extra-paths ["test/clj" "test/cljc" "test/resources" "env/development/resources" "env/development/src/clj" "env/development/src/cljc"], :jvm-opts ["-Dheph-conf=env/test/config.edn" "-Dheph-common-conf=env/common_config.edn" "-Dheph-conf=env/development/config.edn" "-Dheph-common-conf=env/common_config.edn"], :main-opts ["-m" "automaton-simulation-de.repl-core"]}, :paths ["src/clj" "src/cljc" "resources" "src/cljs"], :classpath-roots ["test/clj" "test/cljc" "test/resources" "env/development/resources" "env/development/src/clj" "env/development/src/cljc" "src/clj" "src/cljc" "resources" "src/cljs" "/Users/anthonycaumond/.m2/repository/cider/cider-nrepl/0.30.0/cider-nrepl-0.30.0.jar" "/Users/anthonycaumond/.gitlibs/libs/com.cognitect/test-runner/7284cda41fb9edc0f3bc6b6185cfb7138fc8a023/src" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/clj" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/cljc" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/resources" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/cljs" "/Users/anthonycaumond/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/core.async/1.6.681/core.async-1.6.681.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar" "/Users/anthonycaumond/.m2/repository/nrepl/nrepl/1.0.0/nrepl-1.0.0.jar" "/Users/anthonycaumond/.m2/repository/babashka/fs/0.4.19/fs-0.4.19.jar" "/Users/anthonycaumond/.m2/repository/babashka/process/0.5.21/process-0.5.21.jar" "/Users/anthonycaumond/.m2/repository/com/clojure-goes-fast/clj-memory-meter/0.3.0/clj-memory-meter-0.3.0.jar" "/Users/anthonycaumond/.m2/repository/com/taoensso/encore/3.62.1/encore-3.62.1.jar" "/Users/anthonycaumond/.m2/repository/com/taoensso/tempura/1.5.3/tempura-1.5.3.jar" "/Users/anthonycaumond/.m2/repository/danlentz/clj-uuid/0.1.9/clj-uuid-0.1.9.jar" "/Users/anthonycaumond/.m2/repository/io/sentry/sentry/6.32.0/sentry-6.32.0.jar" "/Users/anthonycaumond/.m2/repository/io/sentry/sentry-clj/6.28.200/sentry-clj-6.28.200.jar" "/Users/anthonycaumond/.m2/repository/lambdaisland/uri/1.16.134/uri-1.16.134.jar" "/Users/anthonycaumond/.m2/repository/metosin/malli/0.13.0/malli-0.13.0.jar" "/Users/anthonycaumond/.m2/repository/mount/mount/0.1.17/mount-0.1.17.jar" "/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar" "/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-core/2.20.0/log4j-core-2.20.0.jar" "/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-slf4j2-impl/2.20.0/log4j-slf4j2-impl-2.20.0.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/tools.cli/1.0.219/tools.cli-1.0.219.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/tools.logging/1.2.4/tools.logging-1.2.4.jar" "/Users/anthonycaumond/.m2/repository/refactor-nrepl/refactor-nrepl/3.9.0/refactor-nrepl-3.9.0.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/core.specs.alpha/0.2.62/core.specs.alpha-0.2.62.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar" "/Users/anthonycaumond/.m2/repository/com/taoensso/truss/1.10.1/truss-1.10.1.jar" "/Users/anthonycaumond/.m2/repository/primitive-math/primitive-math/0.1.6/primitive-math-0.1.6.jar" "/Users/anthonycaumond/.m2/repository/ring/ring-core/1.10.0/ring-core-1.10.0.jar" "/Users/anthonycaumond/.m2/repository/borkdude/dynaload/0.3.5/dynaload-0.3.5.jar" "/Users/anthonycaumond/.m2/repository/borkdude/edamame/1.3.23/edamame-1.3.23.jar" "/Users/anthonycaumond/.m2/repository/fipp/fipp/0.6.26/fipp-0.6.26.jar" "/Users/anthonycaumond/.m2/repository/mvxcvi/arrangement/2.1.0/arrangement-2.1.0.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar" "/Users/anthonycaumond/.m2/repository/org/slf4j/slf4j-api/2.0.6/slf4j-api-2.0.6.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/core.memoize/1.0.253/core.memoize-1.0.253.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar" "/Users/anthonycaumond/.m2/repository/org/ow2/asm/asm/9.2/asm-9.2.jar" "/Users/anthonycaumond/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar" "/Users/anthonycaumond/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar" "/Users/anthonycaumond/.m2/repository/crypto-equality/crypto-equality/1.0.1/crypto-equality-1.0.1.jar" "/Users/anthonycaumond/.m2/repository/crypto-random/crypto-random/1.2.1/crypto-random-1.2.1.jar" "/Users/anthonycaumond/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/core.rrb-vector/0.1.2/core.rrb-vector-0.1.2.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar" "/Users/anthonycaumond/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar" "/Users/anthonycaumond/.m2/repository/org/clojure/data.priority-map/1.1.0/data.priority-map-1.1.0.jar"], :libs {org.clojure/clojure {:mvn/version "1.11.1", :deps/manifest :mvn, :parents #{[]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar"]}, org.apache.logging.log4j/log4j-slf4j2-impl {:mvn/version "2.20.0", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-slf4j2-impl/2.20.0/log4j-slf4j2-impl-2.20.0.jar"]}, commons-codec/commons-codec {:mvn/version "1.15", :deps/manifest :mvn, :dependents [crypto-random/crypto-random], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core crypto-random/crypto-random]}, :paths ["/Users/anthonycaumond/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar"]}, org.clojure/tools.analyzer {:mvn/version "1.1.1", :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :parents #{[org.clojure/core.async org.clojure/tools.analyzer.jvm]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar"]}, org.clojure/tools.logging {:mvn/version "1.2.4", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/tools.logging/1.2.4/tools.logging-1.2.4.jar"]}, org.clojure/core.specs.alpha {:mvn/version "0.2.62", :deps/manifest :mvn, :dependents [org.clojure/clojure], :parents #{[org.clojure/clojure]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/core.specs.alpha/0.2.62/core.specs.alpha-0.2.62.jar"]}, org.clojure/spec.alpha {:mvn/version "0.3.218", :deps/manifest :mvn, :dependents [org.clojure/clojure], :parents #{[org.clojure/clojure]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar"]}, org.clojure/tools.cli {:mvn/version "1.0.219", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/tools.cli/1.0.219/tools.cli-1.0.219.jar"]}, danlentz/clj-uuid {:mvn/version "0.1.9", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/danlentz/clj-uuid/0.1.9/clj-uuid-0.1.9.jar"]}, commons-fileupload/commons-fileupload {:mvn/version "1.5", :deps/manifest :mvn, :dependents [ring/ring-core], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core]}, :paths ["/Users/anthonycaumond/.m2/repository/commons-fileupload/commons-fileupload/1.5/commons-fileupload-1.5.jar"]}, com.clojure-goes-fast/clj-memory-meter {:mvn/version "0.3.0", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/com/clojure-goes-fast/clj-memory-meter/0.3.0/clj-memory-meter-0.3.0.jar"]}, com.taoensso/encore {:mvn/version "3.62.1", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/com/taoensso/encore/3.62.1/encore-3.62.1.jar"]}, org.clojure/tools.analyzer.jvm {:mvn/version "1.2.3", :deps/manifest :mvn, :dependents [org.clojure/core.async], :parents #{[org.clojure/core.async]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar"]}, io.sentry/sentry {:mvn/version "6.32.0", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/io/sentry/sentry/6.32.0/sentry-6.32.0.jar"]}, io.sentry/sentry-clj {:mvn/version "6.28.200", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/io/sentry/sentry-clj/6.28.200/sentry-clj-6.28.200.jar"]}, commons-io/commons-io {:mvn/version "2.11.0", :deps/manifest :mvn, :dependents [ring/ring-core commons-fileupload/commons-fileupload], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core] [hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core commons-fileupload/commons-fileupload]}, :paths ["/Users/anthonycaumond/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar"]}, org.clojure/tools.namespace {:mvn/version "1.4.4", :deps/manifest :mvn, :parents #{[]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/tools.namespace/1.4.4/tools.namespace-1.4.4.jar"]}, com.taoensso/tempura {:mvn/version "1.5.3", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/com/taoensso/tempura/1.5.3/tempura-1.5.3.jar"]}, fipp/fipp {:mvn/version "0.6.26", :deps/manifest :mvn, :dependents [metosin/malli], :parents #{[hephaistox/automaton-core metosin/malli]}, :paths ["/Users/anthonycaumond/.m2/repository/fipp/fipp/0.6.26/fipp-0.6.26.jar"]}, refactor-nrepl/refactor-nrepl {:mvn/version "3.9.0", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/refactor-nrepl/refactor-nrepl/3.9.0/refactor-nrepl-3.9.0.jar"]}, org.ow2.asm/asm {:mvn/version "9.2", :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :parents #{[org.clojure/core.async org.clojure/tools.analyzer.jvm]}, :paths ["/Users/anthonycaumond/.m2/repository/org/ow2/asm/asm/9.2/asm-9.2.jar"]}, org.apache.logging.log4j/log4j-core {:mvn/version "2.20.0", :deps/manifest :mvn, :dependents [org.apache.logging.log4j/log4j-slf4j2-impl hephaistox/automaton-core], :parents #{[hephaistox/automaton-core org.apache.logging.log4j/log4j-slf4j2-impl] [hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-core/2.20.0/log4j-core-2.20.0.jar"]}, primitive-math/primitive-math {:mvn/version "0.1.6", :deps/manifest :mvn, :dependents [danlentz/clj-uuid], :parents #{[hephaistox/automaton-core danlentz/clj-uuid]}, :paths ["/Users/anthonycaumond/.m2/repository/primitive-math/primitive-math/0.1.6/primitive-math-0.1.6.jar"]}, mvxcvi/arrangement {:mvn/version "2.1.0", :deps/manifest :mvn, :dependents [metosin/malli], :parents #{[hephaistox/automaton-core metosin/malli]}, :paths ["/Users/anthonycaumond/.m2/repository/mvxcvi/arrangement/2.1.0/arrangement-2.1.0.jar"]}, com.taoensso/truss {:mvn/version "1.10.1", :deps/manifest :mvn, :dependents [com.taoensso/encore], :parents #{[hephaistox/automaton-core com.taoensso/encore]}, :paths ["/Users/anthonycaumond/.m2/repository/com/taoensso/truss/1.10.1/truss-1.10.1.jar"]}, com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner", :git/sha "7284cda41fb9edc0f3bc6b6185cfb7138fc8a023", :deps/manifest :deps, :deps/root "/Users/anthonycaumond/.gitlibs/libs/com.cognitect/test-runner/7284cda41fb9edc0f3bc6b6185cfb7138fc8a023", :parents #{[]}, :paths ["/Users/anthonycaumond/.gitlibs/libs/com.cognitect/test-runner/7284cda41fb9edc0f3bc6b6185cfb7138fc8a023/src"]}, org.clojure/java.classpath {:mvn/version "1.0.0", :deps/manifest :mvn, :dependents [org.clojure/tools.namespace], :parents #{[org.clojure/tools.namespace]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/java.classpath/1.0.0/java.classpath-1.0.0.jar"]}, borkdude/dynaload {:mvn/version "0.3.5", :deps/manifest :mvn, :dependents [metosin/malli], :parents #{[hephaistox/automaton-core metosin/malli]}, :paths ["/Users/anthonycaumond/.m2/repository/borkdude/dynaload/0.3.5/dynaload-0.3.5.jar"]}, borkdude/edamame {:mvn/version "1.3.23", :deps/manifest :mvn, :dependents [metosin/malli], :parents #{[hephaistox/automaton-core metosin/malli]}, :paths ["/Users/anthonycaumond/.m2/repository/borkdude/edamame/1.3.23/edamame-1.3.23.jar"]}, metosin/malli {:mvn/version "0.13.0", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/metosin/malli/0.13.0/malli-0.13.0.jar"]}, crypto-random/crypto-random {:mvn/version "1.2.1", :deps/manifest :mvn, :dependents [ring/ring-core], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core]}, :paths ["/Users/anthonycaumond/.m2/repository/crypto-random/crypto-random/1.2.1/crypto-random-1.2.1.jar"]}, cider/cider-nrepl {:mvn/version "0.30.0", :deps/manifest :mvn, :parents #{[]}, :paths ["/Users/anthonycaumond/.m2/repository/cider/cider-nrepl/0.30.0/cider-nrepl-0.30.0.jar"]}, ring/ring-codec {:mvn/version "1.2.0", :deps/manifest :mvn, :dependents [ring/ring-core], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core]}, :paths ["/Users/anthonycaumond/.m2/repository/ring/ring-codec/1.2.0/ring-codec-1.2.0.jar"]}, org.clojure/core.rrb-vector {:mvn/version "0.1.2", :deps/manifest :mvn, :dependents [fipp/fipp], :parents #{[hephaistox/automaton-core metosin/malli fipp/fipp]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/core.rrb-vector/0.1.2/core.rrb-vector-0.1.2.jar"]}, crypto-equality/crypto-equality {:mvn/version "1.0.1", :deps/manifest :mvn, :dependents [ring/ring-core], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj ring/ring-core]}, :paths ["/Users/anthonycaumond/.m2/repository/crypto-equality/crypto-equality/1.0.1/crypto-equality-1.0.1.jar"]}, babashka/process {:mvn/version "0.5.21", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/babashka/process/0.5.21/process-0.5.21.jar"]}, org.clojure/tools.reader {:mvn/version "1.3.6", :deps/manifest :mvn, :parents #{[]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar"]}, nrepl/nrepl {:mvn/version "1.0.0", :exclusions #{org.clojure/clojure}, :deps/manifest :mvn, :dependents [refactor-nrepl/refactor-nrepl cider/cider-nrepl hephaistox/automaton-core], :parents #{[hephaistox/automaton-core refactor-nrepl/refactor-nrepl] [cider/cider-nrepl] [hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/nrepl/nrepl/1.0.0/nrepl-1.0.0.jar"]}, mount/mount {:mvn/version "0.1.17", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/mount/mount/0.1.17/mount-0.1.17.jar"]}, org.slf4j/slf4j-api {:mvn/version "2.0.6", :deps/manifest :mvn, :dependents [org.apache.logging.log4j/log4j-slf4j2-impl], :parents #{[hephaistox/automaton-core org.apache.logging.log4j/log4j-slf4j2-impl]}, :paths ["/Users/anthonycaumond/.m2/repository/org/slf4j/slf4j-api/2.0.6/slf4j-api-2.0.6.jar"]}, hephaistox/automaton-core {:git/url "https://github.com/hephaistox/automaton-core", :git/sha "0e28bd727faf06b19a3a4ea8583ad746885b5dae", :deps/manifest :deps, :deps/root "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae", :parents #{[]}, :paths ["/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/clj" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/cljc" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/resources" "/Users/anthonycaumond/.gitlibs/libs/hephaistox/automaton-core/0e28bd727faf06b19a3a4ea8583ad746885b5dae/src/cljs"]}, org.clojure/test.check {:mvn/version "1.1.1", :deps/manifest :mvn, :dependents [metosin/malli], :parents #{[hephaistox/automaton-core metosin/malli]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/test.check/1.1.1/test.check-1.1.1.jar"]}, org.apache.logging.log4j/log4j-api {:mvn/version "2.20.0", :deps/manifest :mvn, :dependents [org.apache.logging.log4j/log4j-slf4j2-impl hephaistox/automaton-core org.apache.logging.log4j/log4j-core], :parents #{[hephaistox/automaton-core org.apache.logging.log4j/log4j-slf4j2-impl] [hephaistox/automaton-core] [hephaistox/automaton-core org.apache.logging.log4j/log4j-core]}, :paths ["/Users/anthonycaumond/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar"]}, lambdaisland/uri {:mvn/version "1.16.134", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/lambdaisland/uri/1.16.134/uri-1.16.134.jar"]}, babashka/fs {:mvn/version "0.4.19", :deps/manifest :mvn, :dependents [hephaistox/automaton-core], :parents #{[hephaistox/automaton-core]}, :paths ["/Users/anthonycaumond/.m2/repository/babashka/fs/0.4.19/fs-0.4.19.jar"]}, org.clojure/core.memoize {:mvn/version "1.0.253", :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :parents #{[org.clojure/core.async org.clojure/tools.analyzer.jvm]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/core.memoize/1.0.253/core.memoize-1.0.253.jar"]}, org.clojure/data.priority-map {:mvn/version "1.1.0", :deps/manifest :mvn, :dependents [org.clojure/core.cache], :parents #{[org.clojure/core.async org.clojure/tools.analyzer.jvm org.clojure/core.memoize org.clojure/core.cache]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/data.priority-map/1.1.0/data.priority-map-1.1.0.jar"]}, ring/ring-core {:mvn/version "1.10.0", :deps/manifest :mvn, :dependents [io.sentry/sentry-clj], :parents #{[hephaistox/automaton-core io.sentry/sentry-clj]}, :paths ["/Users/anthonycaumond/.m2/repository/ring/ring-core/1.10.0/ring-core-1.10.0.jar"]}, org.clojure/core.cache {:mvn/version "1.0.225", :deps/manifest :mvn, :dependents [org.clojure/core.memoize], :parents #{[org.clojure/core.async org.clojure/tools.analyzer.jvm org.clojure/core.memoize]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/core.cache/1.0.225/core.cache-1.0.225.jar"]}, org.clojure/core.async {:mvn/version "1.6.681", :deps/manifest :mvn, :parents #{[]}, :paths ["/Users/anthonycaumond/.m2/repository/org/clojure/core.async/1.6.681/core.async-1.6.681.jar"]}}, :aliases {:deps {:replace-paths [], :replace-deps {org.clojure/tools.deps.cli {:mvn/version "0.9.43"}}, :ns-default clojure.tools.deps.cli.api, :ns-aliases {help clojure.tools.deps.cli.help}}, :test {:extra-paths ["test"]}, :bb-deps {:extra-deps {hephaistox/automaton-build-app {:git/sha "16f0e053f28f9ebbdbf8129daf73c04afd47bf00", :git/url "git@github.com:hephaistox/automaton-build-app.git"}}}, :build {:extra-deps {hephaistox/automaton-build-app {:git/url "https://github.com/hephaistox/automaton-core.git", :sha "16f0e053f28f9ebbdbf8129daf73c04afd47bf00"}}}, :cljs-deps {:extra-deps {binaryage/devtools {:mvn/version "1.0.7"}, refactor-nrepl/refactor-nrepl {:mvn/version "3.6.0"}, cider/cider-nrepl {:mvn/version "0.21.1"}, thheller/shadow-cljs {:mvn/version "2.25.9"}}, :extra-paths ["src/cljs" "src/cljc" "resources" "test/cljs" "test/cljc"]}, :common-test {:exec-fn cognitect.test-runner.api/test, :extra-deps {com.cognitect/test-runner {:git/url "https://github.com/cognitect-labs/test-runner", :sha "7284cda41fb9edc0f3bc6b6185cfb7138fc8a023"}, org.clojure/tools.namespace {:mvn/version "1.4.4"}, org.clojure/tools.reader {:mvn/version "1.3.6"}}, :extra-paths ["test/clj" "test/cljc" "test/resources"], :jvm-opts ["-Dheph-conf=env/test/config.edn" "-Dheph-common-conf=env/common_config.edn"]}, :env-development-repl {:extra-deps {cider/cider-nrepl {:mvn/version "0.30.0"}, org.clojure/core.async {:mvn/version "1.6.681"}}, :extra-paths ["env/development/resources" "env/development/src/clj" "env/development/src/cljc"], :jvm-opts ["-Dheph-conf=env/development/config.edn" "-Dheph-common-conf=env/common_config.edn"], :main-opts ["-m" "automaton-simulation-de.repl-core"]}, :env-development-test {:jvm-opts ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory" "-Dhephaistox-in-test=true" "-Dlog4j.configurationFile=resources/log_config/appenders.properties,resources/log_config/logging-tests.properties"], :main-opts ["-m" "cognitect.test-runner" "-r" ".*-test.*" "-d" "test/clj" "-d" "test/cljc"]}}, :deps {org.clojure/clojure {:mvn/version "1.11.1"}, hephaistox/automaton-core {:git/url "https://github.com/hephaistox/automaton-core", :sha "0e28bd727faf06b19a3a4ea8583ad746885b5dae"}}}